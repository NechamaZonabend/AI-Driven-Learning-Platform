{"level":"info","message":"New user created: 0501234567","timestamp":"2025-06-25T13:43:25.422Z"}
{"level":"info","message":"New user created: 1","timestamp":"2025-06-25T14:50:58.448Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T14:50:58.651Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T14:51:02.085Z"}
{"level":"info","message":"New user created: 76","timestamp":"2025-06-25T14:51:42.864Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T14:52:05.538Z"}
{"level":"info","message":"New user created: 123456789","timestamp":"2025-06-25T14:52:17.991Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T15:03:09.965Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T15:05:54.257Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T15:06:42.462Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T15:06:44.195Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T15:06:45.868Z"}
{"level":"info","message":"User logged in: 0501234567","timestamp":"2025-06-25T15:14:34.007Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:54:15)\n    at async login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:26:24)","timestamp":"2025-06-25T15:20:06.948Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:54:15)\n    at async login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:26:24)","timestamp":"2025-06-25T15:34:13.530Z"}
{"level":"info","message":"New user created: 0987654321","timestamp":"2025-06-25T15:34:46.100Z"}
{"level":"info","message":"User logged in: 0987654321","timestamp":"2025-06-25T15:35:03.651Z"}
{"level":"info","message":"New category created: Math","timestamp":"2025-06-25T17:56:29.829Z"}
{"level":"info","message":"New subcategory created: Algebra (categoryId: 1)","timestamp":"2025-06-25T17:59:16.996Z"}
{"level":"info","message":"New category created: History","timestamp":"2025-06-25T18:01:37.050Z"}
{"level":"info","message":"New subcategory created: Ancient History (categoryId: 2)","timestamp":"2025-06-25T18:02:06.414Z"}
{"level":"info","message":"New subcategory created: Modern History (categoryId: 2)","timestamp":"2025-06-25T18:02:34.174Z"}
{"level":"info","message":"New user created: 0533187814","timestamp":"2025-06-25T18:31:48.853Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:26:24)","timestamp":"2025-06-25T18:32:18.573Z"}
{"level":"info","message":"New user created: 0527125856","timestamp":"2025-06-25T18:33:01.519Z"}
{"level":"info","message":"User logged in: 0533187814","timestamp":"2025-06-25T18:33:37.253Z"}
{"level":"info","message":"Fetched all subcategories","timestamp":"2025-06-25T18:33:44.333Z"}
{"level":"error","message":"Error creating prompt: Invalid category or sub-category combination","stack":"Error: Invalid category or sub-category combination\n    at PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:23:15)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T19:05:24.689Z"}
{"level":"info","message":"Generating lesson for category: History, subcategory: Ancient History","timestamp":"2025-06-25T19:33:10.614Z"}
{"cause":{},"level":"error","message":"Error generating lesson with OpenAI: Connection error.","stack":"Error: Connection error.\n    at OpenAI.makeRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\openai\\src\\client.ts:577:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AIService.generateLesson (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\aiService.ts:23:26)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:27:26)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T19:33:15.105Z"}
{"level":"info","message":"New prompt created for user 1 in History/Ancient History","timestamp":"2025-06-25T19:33:15.144Z"}
{"level":"info","message":"Generating lesson for category: Math, subcategory: Algebra","timestamp":"2025-06-25T19:37:03.224Z"}
{"cause":{},"level":"error","message":"Error generating lesson with OpenAI: Connection error.","stack":"Error: Connection error.\n    at OpenAI.makeRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\openai\\src\\client.ts:577:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AIService.generateLesson (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\aiService.ts:23:26)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:27:26)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T19:37:04.831Z"}
{"level":"info","message":"New prompt created for user 1 in Math/Algebra","timestamp":"2025-06-25T19:37:04.848Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching user prompts: \nInvalid `prisma.prompt.findMany()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:77:23\n\n  74 const skip = (page - 1) * limit;\n  75 \n  76 const [prompts, total] = await Promise.all([\nâ†’ 77   prisma.prompt.findMany({\n         where: {\n       +   userId: {\n       +     equals: Int | IntFieldRefInput,\n       +     in: Int[] | ListIntFieldRefInput,\n       +     notIn: Int[] | ListIntFieldRefInput,\n       +     lt: Int | IntFieldRefInput,\n       +     lte: Int | IntFieldRefInput,\n       +     gt: Int | IntFieldRefInput,\n       +     gte: Int | IntFieldRefInput,\n       +     not: Int | NestedIntFilter\n       +   }\n         },\n         skip: 0,\n         take: 10,\n         include: {\n           category: {\n             select: {\n               id: true,\n               name: true\n             }\n           },\n           subCategory: {\n             select: {\n               id: true,\n               name: true\n             }\n           }\n         },\n         orderBy: {\n           createdAt: \"desc\"\n         }\n       })\n\nArgument `userId` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.prompt.findMany()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:77:23\n\n  74 const skip = (page - 1) * limit;\n  75 \n  76 const [prompts, total] = await Promise.all([\nâ†’ 77   prisma.prompt.findMany({\n         where: {\n       +   userId: {\n       +     equals: Int | IntFieldRefInput,\n       +     in: Int[] | ListIntFieldRefInput,\n       +     notIn: Int[] | ListIntFieldRefInput,\n       +     lt: Int | IntFieldRefInput,\n       +     lte: Int | IntFieldRefInput,\n       +     gt: Int | IntFieldRefInput,\n       +     gte: Int | IntFieldRefInput,\n       +     not: Int | NestedIntFilter\n       +   }\n         },\n         skip: 0,\n         take: 10,\n         include: {\n           category: {\n             select: {\n               id: true,\n               name: true\n             }\n           },\n           subCategory: {\n             select: {\n               id: true,\n               name: true\n             }\n           }\n         },\n         orderBy: {\n           createdAt: \"desc\"\n         }\n       })\n\nArgument `userId` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async Promise.all (index 0)\n    at async PromptService.getUserPrompts (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:76:32)\n    at async getPromptsByUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:22:21)","timestamp":"2025-06-25T19:56:22.374Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching user prompts: \nInvalid `prisma.prompt.findMany()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:77:23\n\n  74 const skip = (page - 1) * limit;\n  75 \n  76 const [prompts, total] = await Promise.all([\nâ†’ 77   prisma.prompt.findMany({\n         where: {\n       +   userId: {\n       +     equals: Int | IntFieldRefInput,\n       +     in: Int[] | ListIntFieldRefInput,\n       +     notIn: Int[] | ListIntFieldRefInput,\n       +     lt: Int | IntFieldRefInput,\n       +     lte: Int | IntFieldRefInput,\n       +     gt: Int | IntFieldRefInput,\n       +     gte: Int | IntFieldRefInput,\n       +     not: Int | NestedIntFilter\n       +   }\n         },\n         skip: 0,\n         take: 10,\n         include: {\n           category: {\n             select: {\n               id: true,\n               name: true\n             }\n           },\n           subCategory: {\n             select: {\n               id: true,\n               name: true\n             }\n           }\n         },\n         orderBy: {\n           createdAt: \"desc\"\n         }\n       })\n\nArgument `userId` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.prompt.findMany()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:77:23\n\n  74 const skip = (page - 1) * limit;\n  75 \n  76 const [prompts, total] = await Promise.all([\nâ†’ 77   prisma.prompt.findMany({\n         where: {\n       +   userId: {\n       +     equals: Int | IntFieldRefInput,\n       +     in: Int[] | ListIntFieldRefInput,\n       +     notIn: Int[] | ListIntFieldRefInput,\n       +     lt: Int | IntFieldRefInput,\n       +     lte: Int | IntFieldRefInput,\n       +     gt: Int | IntFieldRefInput,\n       +     gte: Int | IntFieldRefInput,\n       +     not: Int | NestedIntFilter\n       +   }\n         },\n         skip: 0,\n         take: 10,\n         include: {\n           category: {\n             select: {\n               id: true,\n               name: true\n             }\n           },\n           subCategory: {\n             select: {\n               id: true,\n               name: true\n             }\n           }\n         },\n         orderBy: {\n           createdAt: \"desc\"\n         }\n       })\n\nArgument `userId` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async Promise.all (index 0)\n    at async PromptService.getUserPrompts (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:76:32)\n    at async getPromptsByUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:22:21)","timestamp":"2025-06-25T19:56:38.275Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching user prompts: \nInvalid `prisma.prompt.count()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:99:23\n\n  96     createdAt: 'desc',\n  97   },\n  98 }),\nâ†’ 99 prisma.prompt.count({\n       select: {\n         _count: {\n           select: {\n             _all: true\n           }\n         }\n       },\n       where: {\n     +   userId: {\n     +     equals: Int | IntFieldRefInput,\n     +     in: Int[] | ListIntFieldRefInput,\n     +     notIn: Int[] | ListIntFieldRefInput,\n     +     lt: Int | IntFieldRefInput,\n     +     lte: Int | IntFieldRefInput,\n     +     gt: Int | IntFieldRefInput,\n     +     gte: Int | IntFieldRefInput,\n     +     not: Int | NestedIntFilter\n     +   }\n       }\n     })\n\nArgument `userId` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.prompt.count()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:99:23\n\n  96     createdAt: 'desc',\n  97   },\n  98 }),\nâ†’ 99 prisma.prompt.count({\n       select: {\n         _count: {\n           select: {\n             _all: true\n           }\n         }\n       },\n       where: {\n     +   userId: {\n     +     equals: Int | IntFieldRefInput,\n     +     in: Int[] | ListIntFieldRefInput,\n     +     notIn: Int[] | ListIntFieldRefInput,\n     +     lt: Int | IntFieldRefInput,\n     +     lte: Int | IntFieldRefInput,\n     +     gt: Int | IntFieldRefInput,\n     +     gte: Int | IntFieldRefInput,\n     +     not: Int | NestedIntFilter\n     +   }\n       }\n     })\n\nArgument `userId` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async Promise.all (index 1)\n    at async PromptService.getUserPrompts (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:76:32)\n    at async getPromptsByUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:22:21)","timestamp":"2025-06-25T20:01:57.326Z"}
{"level":"info","message":"User logged in: 0533187814","timestamp":"2025-06-25T21:16:22.178Z"}
{"level":"info","message":"Fetched all subcategories","timestamp":"2025-06-25T21:16:27.364Z"}
{"level":"info","message":"Generating lesson for category: History, subcategory: Ancient History","timestamp":"2025-06-25T21:16:49.038Z"}
{"cause":{},"level":"error","message":"Error generating lesson with OpenAI: Connection error.","stack":"Error: Connection error.\n    at OpenAI.makeRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\openai\\src\\client.ts:577:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AIService.generateLesson (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\aiService.ts:23:26)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:27:26)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T21:16:51.223Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error creating prompt: \nInvalid `prisma.prompt.create()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:42\n\n  31 });\n  32 \n  33 // Save to database\nâ†’ 34 const prompt = await prisma.prompt.create({\n       data: {\n         userId: NaN,\n         categoryId: 2,\n         subCategoryId: 2,\n         response: \"# Ancient History Lesson\\n\\nThank you for your interest in learning about Ancient History in History.\\n\\n## Your Question\\n\\\"undefined\\\"\\n\\n## Lesson Overview\\nThis is a comprehensive topic that covers several important aspects. Here are the key points to consider:\\n\\n### Key Concepts\\n- Understanding the fundamentals of Ancient History\\n- Exploring the relationship with History\\n- Practical applications and examples\\n\\n### Important Points\\n1. Start with the basics and build understanding gradually\\n2. Practice regularly to reinforce learning\\n3. Connect new concepts to what you already know\\n\\n### Next Steps\\n- Continue exploring related topics in History\\n- Look for practical applications of what you've learned\\n- Don't hesitate to ask more specific questions\\n\\n*Note: This lesson was generated using a fallback system. For more detailed and personalized lessons, please ensure your AI service is properly configured.*\",\n     +   prompt: String\n       },\n       include: {\n         category: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         subCategory: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         user: {\n           select: {\n             id: true,\n             name: true\n           }\n         }\n       }\n     })\n\nArgument `prompt` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.prompt.create()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:42\n\n  31 });\n  32 \n  33 // Save to database\nâ†’ 34 const prompt = await prisma.prompt.create({\n       data: {\n         userId: NaN,\n         categoryId: 2,\n         subCategoryId: 2,\n         response: \"# Ancient History Lesson\\n\\nThank you for your interest in learning about Ancient History in History.\\n\\n## Your Question\\n\\\"undefined\\\"\\n\\n## Lesson Overview\\nThis is a comprehensive topic that covers several important aspects. Here are the key points to consider:\\n\\n### Key Concepts\\n- Understanding the fundamentals of Ancient History\\n- Exploring the relationship with History\\n- Practical applications and examples\\n\\n### Important Points\\n1. Start with the basics and build understanding gradually\\n2. Practice regularly to reinforce learning\\n3. Connect new concepts to what you already know\\n\\n### Next Steps\\n- Continue exploring related topics in History\\n- Look for practical applications of what you've learned\\n- Don't hesitate to ask more specific questions\\n\\n*Note: This lesson was generated using a fallback system. For more detailed and personalized lessons, please ensure your AI service is properly configured.*\",\n     +   prompt: String\n       },\n       include: {\n         category: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         subCategory: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         user: {\n           select: {\n             id: true,\n             name: true\n           }\n         }\n       }\n     })\n\nArgument `prompt` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:22)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T21:16:51.232Z"}
{"level":"info","message":"Generating lesson for category: History, subcategory: Ancient History","timestamp":"2025-06-25T21:17:45.294Z"}
{"cause":{},"level":"error","message":"Error generating lesson with OpenAI: Connection error.","stack":"Error: Connection error.\n    at OpenAI.makeRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\openai\\src\\client.ts:577:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AIService.generateLesson (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\aiService.ts:23:26)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:27:26)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T21:17:48.813Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error creating prompt: \nInvalid `prisma.prompt.create()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:42\n\n  31 });\n  32 \n  33 // Save to database\nâ†’ 34 const prompt = await prisma.prompt.create({\n       data: {\n         userId: NaN,\n         categoryId: 2,\n         subCategoryId: 2,\n         response: \"# Ancient History Lesson\\n\\nThank you for your interest in learning about Ancient History in History.\\n\\n## Your Question\\n\\\"undefined\\\"\\n\\n## Lesson Overview\\nThis is a comprehensive topic that covers several important aspects. Here are the key points to consider:\\n\\n### Key Concepts\\n- Understanding the fundamentals of Ancient History\\n- Exploring the relationship with History\\n- Practical applications and examples\\n\\n### Important Points\\n1. Start with the basics and build understanding gradually\\n2. Practice regularly to reinforce learning\\n3. Connect new concepts to what you already know\\n\\n### Next Steps\\n- Continue exploring related topics in History\\n- Look for practical applications of what you've learned\\n- Don't hesitate to ask more specific questions\\n\\n*Note: This lesson was generated using a fallback system. For more detailed and personalized lessons, please ensure your AI service is properly configured.*\",\n     +   prompt: String\n       },\n       include: {\n         category: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         subCategory: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         user: {\n           select: {\n             id: true,\n             name: true\n           }\n         }\n       }\n     })\n\nArgument `prompt` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.prompt.create()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:42\n\n  31 });\n  32 \n  33 // Save to database\nâ†’ 34 const prompt = await prisma.prompt.create({\n       data: {\n         userId: NaN,\n         categoryId: 2,\n         subCategoryId: 2,\n         response: \"# Ancient History Lesson\\n\\nThank you for your interest in learning about Ancient History in History.\\n\\n## Your Question\\n\\\"undefined\\\"\\n\\n## Lesson Overview\\nThis is a comprehensive topic that covers several important aspects. Here are the key points to consider:\\n\\n### Key Concepts\\n- Understanding the fundamentals of Ancient History\\n- Exploring the relationship with History\\n- Practical applications and examples\\n\\n### Important Points\\n1. Start with the basics and build understanding gradually\\n2. Practice regularly to reinforce learning\\n3. Connect new concepts to what you already know\\n\\n### Next Steps\\n- Continue exploring related topics in History\\n- Look for practical applications of what you've learned\\n- Don't hesitate to ask more specific questions\\n\\n*Note: This lesson was generated using a fallback system. For more detailed and personalized lessons, please ensure your AI service is properly configured.*\",\n     +   prompt: String\n       },\n       include: {\n         category: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         subCategory: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         user: {\n           select: {\n             id: true,\n             name: true\n           }\n         }\n       }\n     })\n\nArgument `prompt` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:22)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T21:17:48.821Z"}
{"level":"info","message":"Generating lesson for category: History, subcategory: Ancient History","timestamp":"2025-06-25T21:17:50.138Z"}
{"cause":{},"level":"error","message":"Error generating lesson with OpenAI: Connection error.","stack":"Error: Connection error.\n    at OpenAI.makeRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\openai\\src\\client.ts:577:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AIService.generateLesson (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\aiService.ts:23:26)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:27:26)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T21:17:53.082Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error creating prompt: \nInvalid `prisma.prompt.create()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:42\n\n  31 });\n  32 \n  33 // Save to database\nâ†’ 34 const prompt = await prisma.prompt.create({\n       data: {\n         userId: NaN,\n         categoryId: 2,\n         subCategoryId: 2,\n         response: \"# Ancient History Lesson\\n\\nThank you for your interest in learning about Ancient History in History.\\n\\n## Your Question\\n\\\"undefined\\\"\\n\\n## Lesson Overview\\nThis is a comprehensive topic that covers several important aspects. Here are the key points to consider:\\n\\n### Key Concepts\\n- Understanding the fundamentals of Ancient History\\n- Exploring the relationship with History\\n- Practical applications and examples\\n\\n### Important Points\\n1. Start with the basics and build understanding gradually\\n2. Practice regularly to reinforce learning\\n3. Connect new concepts to what you already know\\n\\n### Next Steps\\n- Continue exploring related topics in History\\n- Look for practical applications of what you've learned\\n- Don't hesitate to ask more specific questions\\n\\n*Note: This lesson was generated using a fallback system. For more detailed and personalized lessons, please ensure your AI service is properly configured.*\",\n     +   prompt: String\n       },\n       include: {\n         category: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         subCategory: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         user: {\n           select: {\n             id: true,\n             name: true\n           }\n         }\n       }\n     })\n\nArgument `prompt` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.prompt.create()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:42\n\n  31 });\n  32 \n  33 // Save to database\nâ†’ 34 const prompt = await prisma.prompt.create({\n       data: {\n         userId: NaN,\n         categoryId: 2,\n         subCategoryId: 2,\n         response: \"# Ancient History Lesson\\n\\nThank you for your interest in learning about Ancient History in History.\\n\\n## Your Question\\n\\\"undefined\\\"\\n\\n## Lesson Overview\\nThis is a comprehensive topic that covers several important aspects. Here are the key points to consider:\\n\\n### Key Concepts\\n- Understanding the fundamentals of Ancient History\\n- Exploring the relationship with History\\n- Practical applications and examples\\n\\n### Important Points\\n1. Start with the basics and build understanding gradually\\n2. Practice regularly to reinforce learning\\n3. Connect new concepts to what you already know\\n\\n### Next Steps\\n- Continue exploring related topics in History\\n- Look for practical applications of what you've learned\\n- Don't hesitate to ask more specific questions\\n\\n*Note: This lesson was generated using a fallback system. For more detailed and personalized lessons, please ensure your AI service is properly configured.*\",\n     +   prompt: String\n       },\n       include: {\n         category: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         subCategory: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         user: {\n           select: {\n             id: true,\n             name: true\n           }\n         }\n       }\n     })\n\nArgument `prompt` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:22)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T21:17:53.090Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:54:15)\n    at async login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:26:24)","timestamp":"2025-06-25T21:23:47.287Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T21:24:20.090Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T21:24:33.201Z"}
{"level":"info","message":"New user created: 9999","timestamp":"2025-06-25T21:24:43.163Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T21:24:43.426Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:9:24)","timestamp":"2025-06-25T21:24:54.678Z"}
{"level":"info","message":"User logged in: 0533187814","timestamp":"2025-06-25T21:25:30.573Z"}
{"level":"info","message":"Fetched all subcategories","timestamp":"2025-06-25T21:25:37.088Z"}
{"level":"info","message":"Generating lesson for category: History, subcategory: Ancient History","timestamp":"2025-06-25T21:25:55.889Z"}
{"cause":{},"level":"error","message":"Error generating lesson with OpenAI: Connection error.","stack":"Error: Connection error.\n    at OpenAI.makeRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\openai\\src\\client.ts:577:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AIService.generateLesson (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\aiService.ts:23:26)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:27:26)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T21:26:00.624Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error creating prompt: \nInvalid `prisma.prompt.create()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:42\n\n  31 });\n  32 \n  33 // Save to database\nâ†’ 34 const prompt = await prisma.prompt.create({\n       data: {\n         userId: NaN,\n         categoryId: 2,\n         subCategoryId: 2,\n         response: \"# Ancient History Lesson\\n\\nThank you for your interest in learning about Ancient History in History.\\n\\n## Your Question\\n\\\"undefined\\\"\\n\\n## Lesson Overview\\nThis is a comprehensive topic that covers several important aspects. Here are the key points to consider:\\n\\n### Key Concepts\\n- Understanding the fundamentals of Ancient History\\n- Exploring the relationship with History\\n- Practical applications and examples\\n\\n### Important Points\\n1. Start with the basics and build understanding gradually\\n2. Practice regularly to reinforce learning\\n3. Connect new concepts to what you already know\\n\\n### Next Steps\\n- Continue exploring related topics in History\\n- Look for practical applications of what you've learned\\n- Don't hesitate to ask more specific questions\\n\\n*Note: This lesson was generated using a fallback system. For more detailed and personalized lessons, please ensure your AI service is properly configured.*\",\n     +   prompt: String\n       },\n       include: {\n         category: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         subCategory: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         user: {\n           select: {\n             id: true,\n             name: true\n           }\n         }\n       }\n     })\n\nArgument `prompt` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.prompt.create()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:42\n\n  31 });\n  32 \n  33 // Save to database\nâ†’ 34 const prompt = await prisma.prompt.create({\n       data: {\n         userId: NaN,\n         categoryId: 2,\n         subCategoryId: 2,\n         response: \"# Ancient History Lesson\\n\\nThank you for your interest in learning about Ancient History in History.\\n\\n## Your Question\\n\\\"undefined\\\"\\n\\n## Lesson Overview\\nThis is a comprehensive topic that covers several important aspects. Here are the key points to consider:\\n\\n### Key Concepts\\n- Understanding the fundamentals of Ancient History\\n- Exploring the relationship with History\\n- Practical applications and examples\\n\\n### Important Points\\n1. Start with the basics and build understanding gradually\\n2. Practice regularly to reinforce learning\\n3. Connect new concepts to what you already know\\n\\n### Next Steps\\n- Continue exploring related topics in History\\n- Look for practical applications of what you've learned\\n- Don't hesitate to ask more specific questions\\n\\n*Note: This lesson was generated using a fallback system. For more detailed and personalized lessons, please ensure your AI service is properly configured.*\",\n     +   prompt: String\n       },\n       include: {\n         category: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         subCategory: {\n           select: {\n             id: true,\n             name: true\n           }\n         },\n         user: {\n           select: {\n             id: true,\n             name: true\n           }\n         }\n       }\n     })\n\nArgument `prompt` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:34:22)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-25T21:26:00.638Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:17:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:11:24)","timestamp":"2025-06-25T23:26:37.995Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:17:15)\n    at async register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:11:24)","timestamp":"2025-06-25T23:26:42.947Z"}
{"level":"info","message":"New user created: 000000","timestamp":"2025-06-25T23:26:49.576Z"}
{"level":"info","message":"New user created: 999","timestamp":"2025-06-25T23:42:13.464Z"}
{"level":"error","message":"Error verifying token: jwt malformed","name":"JsonWebTokenError","stack":"JsonWebTokenError: jwt malformed\n    at Object.module.exports [as verify] (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n    at UserService.verifyToken (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:148:27)\n    at authenticateToken (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\middlewere\\auth_middleware.ts:33:36)\n    at Layer.handleRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\index.js:582:12)","timestamp":"2025-06-25T23:47:49.377Z"}
{"level":"error","message":"Token verification failed: Invalid token","stack":"Error: Invalid token\n    at UserService.verifyToken (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:155:13)\n    at authenticateToken (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\middlewere\\auth_middleware.ts:33:36)\n    at Layer.handleRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\index.js:295:15\n    at processParams (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\router\\index.js:291:5)","timestamp":"2025-06-25T23:47:49.381Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error creating user: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:11:46\n\n   8 async createUser(userData: CreateUserRequest): Promise<Omit<AuthResponse, 'token'>> {\n   9   try {\n  10     // Check if user already exists\nâ†’ 11     const existingUser = await prisma.user.findUnique({\n           where: {\n             phone: 0\n                    ~\n           }\n         })\n\nArgument `phone`: Invalid value provided. Expected String, provided Int.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.user.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:11:46\n\n   8 async createUser(userData: CreateUserRequest): Promise<Omit<AuthResponse, 'token'>> {\n   9   try {\n  10     // Check if user already exists\nâ†’ 11     const existingUser = await prisma.user.findUnique({\n           where: {\n             phone: 0\n                    ~\n           }\n         })\n\nArgument `phone`: Invalid value provided. Expected String, provided Int.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:11:28)\n    at async AuthController.register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:20:20)","timestamp":"2025-06-26T08:18:28.946Z"}
{"level":"error","message":"Error creating category: Category with this name already exists","stack":"Error: Category with this name already exists\n    at CategoryService.createCategory (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\categoryService.ts:61:15)\n    at async createCategory (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\categoryController.ts:16:22)","timestamp":"2025-06-26T08:22:48.765Z"}
{"level":"info","message":"New category created: ttttt","timestamp":"2025-06-26T08:24:00.236Z"}
{"level":"error","message":"Error logging in user: Illegal arguments: number, string","stack":"Error: Illegal arguments: number, string\n    at _async (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\bcryptjs\\umd\\index.js:305:15)\n    at C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\bcryptjs\\umd\\index.js:335:11\n    at new Promise (<anonymous>)\n    at Object.compare (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\bcryptjs\\umd\\index.js:334:16)\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:58:44)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T08:27:39.860Z"}
{"level":"info","message":"User logged in: 0533187814","timestamp":"2025-06-26T08:32:34.153Z"}
{"level":"info","message":"New user created: 0583279009","timestamp":"2025-06-26T08:37:02.818Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T08:38:49.045Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T08:39:28.608Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T08:40:03.115Z"}
{"level":"info","message":"User logged in: 0533187814","timestamp":"2025-06-26T08:40:32.997Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async AuthController.register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:20:20)","timestamp":"2025-06-26T08:46:25.015Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async AuthController.register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:20:20)","timestamp":"2025-06-26T08:46:38.204Z"}
{"level":"info","message":"User logged in: 0533187814","timestamp":"2025-06-26T08:49:53.589Z"}
{"level":"info","message":"New user created: 99","timestamp":"2025-06-26T08:51:39.933Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T08:52:04.753Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T08:52:29.102Z"}
{"level":"info","message":"User logged in: 0533187814","timestamp":"2025-06-26T09:11:02.139Z"}
{"level":"info","message":"New user created: 000","timestamp":"2025-06-26T09:13:24.799Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:14:48.166Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:22:09.876Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:22:40.885Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:24:56.932Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:24:59.018Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:63:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:27:07.677Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:63:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:38:58.720Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:63:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:39:52.060Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:63:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:42:08.937Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:63:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:43:25.343Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async AuthController.register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:20:20)","timestamp":"2025-06-26T09:43:37.589Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async AuthController.register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:20:20)","timestamp":"2025-06-26T09:43:49.777Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async AuthController.register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:20:20)","timestamp":"2025-06-26T09:43:52.094Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async AuthController.register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:20:20)","timestamp":"2025-06-26T09:43:54.403Z"}
{"level":"info","message":"New user created: 55","timestamp":"2025-06-26T09:44:28.584Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:63:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:44:49.492Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:63:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T09:45:14.111Z"}
{"level":"error","message":"Error creating prompt: Invalid category or sub-category combination","stack":"Error: Invalid category or sub-category combination\n    at PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:23:15)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-26T09:57:04.610Z"}
{"level":"info","message":"New category created: anglur","timestamp":"2025-06-26T10:16:08.524Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:20:09.027Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:21:06.312Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:22:39.038Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:22:40.318Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:22:41.398Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:22:42.355Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:22:43.172Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:22:44.153Z"}
{"level":"info","message":"Fetched all subcategories","timestamp":"2025-06-26T10:25:19.251Z"}
{"level":"info","message":"New subcategory created: name (categoryId: 1)","timestamp":"2025-06-26T10:27:47.583Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:29:21.455Z"}
{"clientVersion":"6.10.1","level":"error","message":"Error fetching subcategory: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.subCategory.findUnique()` invocation in\nC:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:52\n\n  38 \n  39 async getSubCategoryById(subCategoryId: number) {\n  40   try {\nâ†’ 41     const subCategory = await prisma.subCategory.findUnique({\n           where: {\n         +   id: Int\n           },\n           include: {\n             category: {\n               select: {\n                 id: true,\n                 name: true\n               }\n             }\n           }\n         })\n\nArgument `id` is missing.\n    at kn (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at Zn.handleRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7102)\n    at Zn.handleAndLogRequestError (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6784)\n    at Zn.request (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6491)\n    at async l (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9778)\n    at async SubCategoryService.getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\subCategoryService.ts:41:27)\n    at async getSubCategoryById (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\subCategoryController.ts:17:25)","timestamp":"2025-06-26T10:29:32.638Z"}
{"level":"error","message":"Error creating prompt: Sub-category with ID 1 does not exist for category ID 2","stack":"Error: Sub-category with ID 1 does not exist for category ID 2\n    at PromptService.createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\promptService.ts:22:9)\n    at async createPrompt (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\promptController.ts:10:23)","timestamp":"2025-06-26T10:33:24.582Z"}
{"level":"error","message":"Error creating user: User with this phone number already exists","stack":"Error: User with this phone number already exists\n    at UserService.createUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:16:15)\n    at async AuthController.register (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:20:20)","timestamp":"2025-06-26T11:31:30.829Z"}
{"level":"info","message":"New user created: 0509999999","timestamp":"2025-06-26T11:32:59.332Z"}
{"level":"info","message":"User logged in: 0509999999","timestamp":"2025-06-26T11:34:06.958Z"}
{"level":"error","message":"Error logging in user: Invalid phone number or password","stack":"Error: Invalid phone number or password\n    at UserService.loginUser (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\services\\userService.ts:61:15)\n    at async AuthController.login (C:\\Users\\This User\\Desktop\\Mini MVP\\Backend\\src\\controllers\\authController.ts:34:20)","timestamp":"2025-06-26T11:34:30.852Z"}
{"level":"info","message":"New user created: 0909","timestamp":"2025-06-26T11:37:09.227Z"}
{"level":"info","message":"User logged in: 0909","timestamp":"2025-06-26T11:38:07.358Z"}
{"level":"info","message":"New user created: 56","timestamp":"2025-06-26T11:47:23.389Z"}
{"level":"info","message":"Fetched all subcategories","timestamp":"2025-06-26T11:47:28.304Z"}
{"level":"info","message":"User logged in: 0533187814","timestamp":"2025-06-26T11:49:56.580Z"}
{"level":"info","message":"User logged in: 0909","timestamp":"2025-06-26T11:50:42.410Z"}
